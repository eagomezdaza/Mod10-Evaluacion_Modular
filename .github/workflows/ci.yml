[PEGAR AQUÍ EL CONTENIDO COMPLETO CORREGIDO DE ARRIBA]
name: Evaluacion Modular CI

on:
  push:
    branches: [ "main" ]
    paths:
      - "src/**"
      - "tests/**"
      - "docker/**"
      - "Makefile"
      - "requirements.txt"
      - ".github/workflows/ci.yml"
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      PORT: 5000
      MODEL_PATH: src/model/modelo_breast.pkl
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Train model
        run: |
          python src/train_breast_cancer.py

      - name: Start API (Gunicorn, factory, background)
        env:
          PORT: ${{ env.PORT }}
          MODEL_PATH: ${{ env.MODEL_PATH }}
        run: |
          gunicorn 'src.app:create_app()' -w 2 -b 127.0.0.1:${PORT} > api.log 2>&1 &
          echo $! > app.pid
          for i in $(seq 1 30); do
            if curl -fsS "http://127.0.0.1:${PORT}/health" >/dev/null 2>&1; then
              echo "✅ API healthy en intento $i"
              break
            fi
            echo "⏳ Esperando API... (intento $i)"
            sleep 2
            if [ "$i" -eq 30 ]; then
              echo "❌ La API no alcanzó estado healthy a tiempo."
              echo "=== api.log (últimas 200 líneas) ==="
              tail -n 200 api.log || true
              exit 1
            fi
          done

      - name: Smoke tests
        run: |
          set -e
          curl -f "http://127.0.0.1:${PORT}/health"
          cat > sample_test.json << 'EOF'
          {
            "features": [17.99, 10.38, 122.8, 1001.0, 0.1184, 0.2776, 0.3001, 0.1471, 0.2419, 0.07871,
                         1.095, 0.9053, 8.589, 153.4, 0.006399, 0.04904, 0.05373, 0.01587, 0.03003, 0.006193,
                         25.38, 17.33, 184.6, 2019.0, 0.1622, 0.6656, 0.7119, 0.2654, 0.4601, 0.1189]
          }
          EOF
          curl -f -X POST "http://127.0.0.1:${PORT}/predict" \
               -H "Content-Type: application/json" \
               --data @sample_test.json

      - name: Mostrar logs de la API
        if: always()
        run: |
          echo "=== api.log (últimas 150 líneas) ==="
          tail -n 150 api.log || true

      - name: Detener API
        if: always()
        run: |
          [ -f app.pid ] && kill "$(cat app.pid)" 2>/dev/null || true
